import type { NextPage } from "next";
import Head from "next/head";
import Layout from "../components/Layout/Layout";
import SiteList from "../components/SiteList/SiteList";
import CaseTable from "../components/CaseTable/CaseTable";
import { useState, useEffect } from "react";
import { Cases } from "@prisma/client";
import styles from "./customer.module.css";
import { useRouter } from "next/router";
import { trpc } from "../utils/trpc";

const Customer: NextPage = () => {
  const router = useRouter();
  const [currentCase, setCurrentCase] = useState<Cases[] | undefined>([]);
  const { customer } = router.query;
  const { data, isLoading, refetch } = trpc.categories.getCustomer.useQuery(
    customer as string
  );

  const [currentSiteName, setCurrentSiteName] = useState<string>("");

  const refetchear = () => {
    refetch();
  }

  useEffect(() => {
    if (data) {
      setCurrentCase(data.cases);
    }
  }, [data]);

  const filterCases = (site: string) => {
    if (!site) {
      setCurrentCase(data?.cases);
      return;
    }
    const filteredCases = data?.cases.filter((c) => c.siteId === site);
    setCurrentCase(filteredCases);
  };

  return (
    <>
      <Head>
        <title>{data?.alt}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout title={data?.name}>
        {isLoading ? (
          <p>Loading...</p>
        ) : (
          <div className={styles.content}>
            <SiteList
              sites={data?.sites}
              filterCases={filterCases}
              setCurrentSiteName={setCurrentSiteName}
            />
            <CaseTable
              cases={currentCase}
              customer={data}
              currentSiteName={currentSiteName}
              refetchear={refetchear}
            />
          </div>
        )}
      </Layout>
    </>
  );
};

export default Customer;
